<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>ms</display-name>
  <welcome-file-list>
    <welcome-file>/views/transform/admin/login.jsp</welcome-file>
    <welcome-file>/views/index.jsp</welcome-file>
    <welcome-file>/views/index.html</welcome-file>
    <welcome-file>/views/index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  <filter>
    <filter-name>CharacterFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>TransFormRequestFilter</filter-name>
    <filter-class>com.zhicloud.ms.transform.util.TransFormRequestFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>TransFormRequestFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:*.xml</param-value>
  </context-param>
  <servlet> 
		<servlet-name>zcmsDispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>zcmsDispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<listener>
		<description>用于加载系统属性</description>
		<listener-class>com.zhicloud.ms.app.propeties.AppPropertiesListener</listener-class>
	</listener>
	
	<listener>
		<description>初始化地域信息，地域对应数据中心，然后向对应数据中心的http gateway消息推送接口，然后保持连接</description>
		<listener-class>com.zhicloud.ms.app.listener.RegionInitializerListener</listener-class>
	</listener>
	

	
	<servlet>
		<description>从http gateway读取光盘镜像</description>
		<servlet-name>IsoImageInitializerListener</servlet-name>
		<servlet-class>com.zhicloud.ms.app.listener.IsoImageInitializerListener</servlet-class>
		<init-param>
			<description>两次同步动作的间隔时长，单位秒</description>
			<param-name>interval_time</param-name>
			<param-value>600</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<servlet>
		<description>从http gateway读取磁盘镜像，然后写进数据库</description>
		<servlet-name>SysDataInitializerListener</servlet-name>
		<servlet-class>com.zhicloud.ms.app.listener.SysDataInitializerListener</servlet-class>
		<init-param>
			<description>两次同步动作的间隔时长，单位秒</description>
			<param-name>interval_time</param-name>
			<param-value>100</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<servlet>
		<description>从http gateway查询出最新的云主机，然后更新至mysql的云主机表,并启动云主机资源监控</description>
		<servlet-name>RealCloudHostFetcherListener</servlet-name>
		<servlet-class>com.zhicloud.ms.app.listener.RealCloudHostFetcherListener</servlet-class>
		<init-param>
			<description>两次同步云主机动作的间隔时长，单位秒</description>
			<param-name>fetch_host_interval_time</param-name>
			<param-value>60</param-value>
		</init-param>
		<init-param>
			<description>两次资源监控信息扫描动作的间隔时长，单位秒</description>
			<param-name>scan_monitor_info_interval_time</param-name>
			<param-value>10</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<servlet>
		<description>fetch physical machine information from http_gateway</description>
		<servlet-name>ServerFetcherListener</servlet-name>
		<servlet-class>com.zhicloud.ms.app.listener.ServerFetcherListener</servlet-class>
		<init-param>
			<description>interval time for fetching server information, units : seconds</description>
			<param-name>fetch_server_interval_time</param-name>
			<param-value>10</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<servlet>
		<description>fetch service information from http_gateway</description>
		<servlet-name>ServiceFetcherListener</servlet-name>
		<servlet-class>com.zhicloud.ms.app.listener.ServiceFetcherListener</servlet-class>
		<init-param>
			<description>interval time for fetching service information, units : seconds</description>
			<param-name>fetch_service_interval_time</param-name>
			<param-value>10</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<servlet>
		<description>fetch network information from http_gateway</description>
		<servlet-name>NetworkFetcherListener</servlet-name>
		<servlet-class>com.zhicloud.ms.app.listener.NetworkFetcherListener</servlet-class>
		<init-param>
			<description>interval time for fetching network information, units : seconds</description>
			<param-name>fetch_interval_time</param-name>
			<param-value>10</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<servlet>
		<description>fetch address information from http_gateway</description>
		<servlet-name>AddressFetcherListener</servlet-name>
		<servlet-class>com.zhicloud.ms.app.listener.AddressFetcherListener</servlet-class>
		<init-param>
			<description>interval time for fetching address information, units : seconds</description>
			<param-name>fetch_interval_time</param-name>
			<param-value>10</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
 	</servlet>
	<!-- **************************************************** -->
	
	<servlet>
		<description>从未处理的用户订单取出一个云主机配置并创建云主机</description>
		<servlet-name>UserOrderedCloudHostCreationListener</servlet-name>
		<servlet-class>com.zhicloud.ms.app.listener.UserOrderedCloudHostCreationListener</servlet-class>
		<init-param>
			<description>两次创建动作的间隔时长，单位秒</description>
			<param-name>interval_time</param-name>
			<param-value>3</param-value>
		</init-param>
		<init-param>
			<description>成功发送一个创建消息之后，等待一段时间再开始一次新的动作，单位秒</description>
			<param-name>wait_time_after_sending_creation</param-name>
			<param-value>10</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<servlet>
		<description>读取云主机仓库的配置，然后创建仓库里的云主机</description>
		<servlet-name>WarehouseCloudHostCreationListener</servlet-name>
		<servlet-class>com.zhicloud.ms.app.listener.WarehouseCloudHostCreationListener</servlet-class>
		<init-param>
			<description>两次创建动作的间隔时长，单位秒</description>
			<param-name>interval_time</param-name>
			<param-value>180</param-value>
		</init-param>
		<init-param>
			<description>创建时间段的开始时间，格式为"HH:mm:ss"</description>
			<param-name>action_start_time</param-name>
			<param-value>02:00:00</param-value>
		</init-param>
		<init-param>
			<description>创建时间段的结束时间，格式为"HH:mm:ss"</description>
			<param-name>action_end_time</param-name>
			<param-value>07:00:00</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet>
		<description>平台资源监控</description>
		<servlet-name>AllResourceMonitorListener</servlet-name>
		<servlet-class>com.zhicloud.ms.app.listener.AllResourceMonitorListener</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet> 
	<servlet>
		<description>开启仓库检测</description>
		<servlet-name>WarehouseCheckTimeListener</servlet-name>
		<servlet-class>com.zhicloud.ms.app.listener.WarehouseCheckTimeListener</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet> 
	<!-- **************************************************** -->
	
	<!-- 配置定时任务监听器 -->
	<listener>
	    <listener-class>com.zhicloud.ms.app.listener.LogFileListener</listener-class>
	</listener>
	
	<!-- 配置定时任务监听器-检查停用的云主机是否关机 -->
	<listener>
	    <listener-class>com.zhicloud.ms.app.listener.CheckHostListener</listener-class>
	</listener>

	<!-- session监听器 -->
	<listener>  
	    <listener-class>com.zhicloud.ms.transform.util.TransFormSessionValidate</listener-class>  
	</listener>

	<!-- 用户是否处于活动状态监听器 -->
	<listener>
		<listener-class>com.zhicloud.ms.transform.util.TransFormCheckUserListener</listener-class>
	</listener>	

	<!-- 配置定时任务监听器-更新gw监控数据到内存 -->
	<listener>
	    <listener-class>com.zhicloud.ms.app.listener.CheckServerRoomsListener</listener-class>
	</listener>		
		
	<!-- 检查定时器情况 -->
	<listener>
		<listener-class>com.zhicloud.ms.app.listener.TimerCheckListener</listener-class>
	</listener>	
	
	<!-- 计算盒子用户在线时长 -->
	<listener>
		<listener-class>com.zhicloud.ms.app.listener.BoxCumulativeOnlineTimeListener</listener-class>
	</listener>	
	
	<servlet>
		<description>从数据库读取字典表数据，写入缓存</description>
		<servlet-name>DictionaryListener</servlet-name>
		<servlet-class>com.zhicloud.ms.app.listener.DictionaryListener</servlet-class>
		<init-param>
			<description>刷新的时间间隔，单位秒</description>
			<param-name>interval_time</param-name>
			<param-value>100</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
 
</web-app>
