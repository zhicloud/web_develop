<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhicloud.ms.mapper.SysUserMapper">
	<resultMap type="com.zhicloud.ms.vo.SysUser" id="SysUser">
		<id column="id"                 property="id"/>
		<result column="username"       property="username"/>
		<result column="alias"          property="alias"/>
		<result column="password"       property="password"/>
		<result column="type"           property="type"/>
		<result column="group_id"       property="groupId"/>
		<result column="create_time"    property="createTime"/>
		<result column="modified_time"  property="modifiedTime"/>
	</resultMap>
	<select id="checkLogin" resultMap="SysUser">
		select * from sys_user u
		join terminal_user tu on u.id = tu.id
		where u.username = #{username}
		and u.password = #{password}
		<if test="type!=null">
		and type = #{type}
		</if>
		and tu.status != 9
		limit 1
	</select>
	
	<select id="getSysRoleById" resultType="String">
		select  name from (
		select    b.name
		from      man_system_userrole a,man_system_role b
		where   a.roleid=b.billid and a.userid= #{userId}
		union all
		select    concat('(ç»„:' ,d.name,')',c.name)  as name 
		from      man_system_usergroup a, man_system_rolegroup b,man_system_role c,man_system_group d
		where   a.groupid=b.groupid and b.roleid=c.billid and b.groupid=d.billid and a.userid=#{userId} )  as allname
		order by name desc
	</select>
	
	
	<select id="queryUserByUsername" resultMap="SysUser">
		select * from sys_user u
		join terminal_user tu on u.id = tu.id
		where u.username = #{username}
		and tu.status != 9
		limit 1
	</select>
	
	<select id="queryAllTerminalInGroup" resultMap="SysUser">
		select * from sys_user u
		join terminal_user tu on u.id = tu.id
		where u.group_id = #{group_id}
		<if test="type!=null">
		and type = #{type}
		</if>
		and tu.status != 9
		order by u.username asc
	</select>
	
	<select id="queryAllTerminalOutGroup" resultMap="SysUser">
		select * from sys_user u
		join terminal_user tu on u.id = tu.id
		 where u.group_id not in (select id from sys_group)
		<if test="type!=null">
		and type = #{type}
		</if>
		and tu.status != 9
	</select>
	<select id="getUserById" resultMap="SysUser">
		select u.* from sys_user  u
		join terminal_user tu on u.id = tu.id
		where id = #{id}
		and tu.status != 9
	</select>
	
	<select id="queryUserByAlias" resultMap="SysUser">
		select * from sys_user u
		join terminal_user tu on u.id = tu.id
		where u.alias = #{alias}
		and tu.status != 9
		limit 1
	</select>
	
	<update id="updatePasswordById">
		update sys_user 		
		set password = #{password},
		modified_time = #{modified_time}
		where  id = #{id}
	</update>
	
	<insert id="addSysUser">
		insert into sys_user (id, type, username, alias, password, group_id, create_time, modified_time) 
		values (#{id}, #{type}, #{username}, #{alias}, #{password}, #{group_id}, #{create_time}, #{modified_time})
	</insert> 
	
	<update id="updateSysUserById">
		update sys_user set 
			group_id = #{group_id},
			alias = #{alias}
		where id = #{id}
	</update>
	
	<update id="addItems">
		update sys_user set
		group_id = #{group_id}
		where id = #{id}
	</update>
	
	<update id="deleteItems">
		update sys_user set
		group_id = '0'
		where id = #{id}
	</update>
	
	<delete id="deleteSysUserById">
		delete u.*
		from sys_user u
		where id = #{id}
	</delete>
	

	
	<update id="updateAliasById">
		update sys_user 		
		set alias = #{alias},
		modified_time = #{modified_time}
		where  id = #{id}
	</update>
	
</mapper>
