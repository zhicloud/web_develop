<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhicloud.ms.mapper.TerminalUserMapper">
	
	<resultMap id="TerminalUserVO" type="com.zhicloud.ms.vo.TerminalUserVO">
		<id     property="id"        column="id" />
		<result property="groupId" column="group_id" />
		<result property="groupName" column="group_name" />
		<result property="usbStatus" column="usb_status" />
		<result property="cloudHostAmount" column="cloud_host_amount" />
		<result property="createTime" column="create_time" />
		<result property="modifiedTime" column="modified_time" />
	</resultMap>
	
	<!-- ********************* -->
	
	<select id="getAll" resultMap="TerminalUserVO">
		select 	t.id,
				u.username, 
				u.alias alias, 
				t.name, 
				u.group_id,
				g.group_name,
				t.email, 
				t.phone, 
				t.usb_status, 
				t.status,
				t.cloud_host_amount,
				t.region,
				t.industry,
				t.create_time,
				t.modified_time,
				b.id boxId
		from terminal_user t
		left join sys_user u
			on u.id = t.id
		left join sys_group g
			on u.group_id = g.id
		left join terminal_box b
			on t.id = b.allocate_user_id
		where u.type = 2
		and t.status != 9
		order by t.modified_time desc	
	</select>

    <select id="queryAllWithCondition" resultMap="TerminalUserVO">
        select 	t.id,
        u.username,
        u.alias alias,
        t.name,
        u.group_id,
        g.group_name,
        t.email,
        t.phone,
        t.usb_status,
        t.status,
        t.cloud_host_amount,
        t.region,
        t.industry,
        t.create_time,
        t.modified_time
        from terminal_user t
        left join sys_user u
        on u.id = t.id
        left join sys_group g
        on u.group_id = g.id
        <where>
            u.type = 2
            and t.status != 9
            <if test="param!=null and param!=''">
                AND (u.username LIKE #{param} OR u.alias LIKE #{param}
                OR t.name LIKE #{param} OR g.group_name LIKE #{param} OR t.email LIKE #{param} OR t.phone LIKE #{param})
            </if>
            <if test="status!=null">
                AND  t.status = #{status}
            </if>
            <if test="usb_status!=null">
                AND  t.usb_status = #{usb_status}
            </if>
        </where>
        order by t.modified_time desc
    </select>

	<select id="getById" resultMap="TerminalUserVO">
		select 	t.id,
				u.username, 
				u.alias alias, 
				t.name, 
				u.group_id,
				g.group_name,
				t.email, 
				t.phone, 
				t.usb_status, 
				t.status,
				t.cloud_host_amount,
				t.region,
				t.industry,
				t.create_time,
				t.modified_time
		from terminal_user t
		left join sys_user u
			on u.id = t.id
		left join sys_group g
			on u.group_id = g.id
		where t.id=#{id} and u.type = 2
		and t.status != 9
	</select>
	
	<select id="getUserByGroupId" resultMap="TerminalUserVO">
		select
			 t.*,
			 u.username username
		from terminal_user t
		left join sys_user u
		on u.id = t.id
		where u.group_id = #{group_id}
		and t.status != 9
	</select>  
	
	<select id="getUserByGroupIdForBoxAllocate" resultMap="TerminalUserVO">
		select t.* ,
			 u.username username
			 from terminal_user t
		left join sys_user u
		on u.id = t.id
		where 
		u.group_id = #{group_id} and t.id not in (select allocate_user_id from terminal_box where allocate_user_id is not null)
		and t.status != 9
	</select> 
	
	<!-- ********************* -->
	
	<insert id="addTerminalUser">
		insert into terminal_user (id, name, email, phone, usb_status, status, cloud_host_amount, region, industry, create_time, modified_time)
		values (#{id}, #{name}, #{email}, #{phone}, #{usb_status}, #{status}, #{cloud_host_amount}, #{region}, #{industry}, #{create_time}, #{modified_time})
	</insert>
	
	<update id="updateTerminalUserById">
		update terminal_user set 
			name = #{name},
			email = #{email},
			phone = #{phone},
			region = #{region},
			industry = #{industry},
			modified_time = #{modified_time}
		where id = #{id}
	</update>
	
	<update id="updateUSBStatusById">
		update terminal_user set 
			usb_status = #{usb_status},
			modified_time = #{modified_time}
		where id = #{id}
	</update>
	
	<update id="updateStatusById">
		update terminal_user set 
			status = #{status},
			modified_time = #{modified_time}
		where id = #{id}
	</update>
	
	<update id="updateCloudHostAmount">
		update terminal_user set 
			cloud_host_amount =  cloud_host_amount + 1,
			modified_time = #{modified_time}
		where id = #{id}
	</update>
	<update id="updateCloudHostAmountForDelete">
		update terminal_user set 
			cloud_host_amount =  cloud_host_amount - 1,
			modified_time = #{modified_time}
		where id = #{id}
	</update>
	
	<!-- ********************* -->
	
	
	<delete id="deleteTerminalUserById">
		delete t.*
		from terminal_user t
		where id = #{id}
	</delete>
	
	<delete id="deleteTerminalUserByIds">
		delete t.*
		from terminal_user t
		where id in 
		<foreach collection="array" item="item" open="(" close=")" separator=", ">
			#{item}
		</foreach>
	</delete>
	
	
</mapper>
