<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhicloud.ms.mapper.SysDiskImageMapper">


	<resultMap type="com.zhicloud.ms.vo.SysDiskImageVO" id="SysDiskImageVO">
		<id     column="id"            property="id" />
		<result column="real_image_id" property="realImageId" />
		<result column="from_host_id"  property="fromHostId" />
		<result column="group_id"      property="groupId" />
		<result column="user_id"       property="userId" />
		<result column="display_name"  property="displayName" />
		<result column="create_time"  property="createTime" />
 		<result column="type"  property="type" />
 		<result column="name"  property="name" />
 		<result column="image_type"  property="imageType" />
	</resultMap>
	 
	
	 
	
	 
	
	<select id="getAll" resultMap="SysDiskImageVO">
		select
			t.id,
			t.real_image_id,
			t.name,
			t.from_host_id,
			t.type,
			t.description,
  			t.display_name,
 			t.status,
 			t.create_time
		from sys_disk_image t
		order by t.name
	</select>
	
	<select id="querySysDiskImageByImageType" resultMap="SysDiskImageVO">
		select
			t.id,
			t.real_image_id,
			t.name,
			t.from_host_id,
			t.type,
			t.description,
  			t.display_name,
 			t.status,
 			t.create_time,
 			t.image_type
		from sys_disk_image t
		where 1=1 
		<if test="_parameter==1">
			and image_type = #{_parameter}
	    </if>
	    <if test="_parameter!=1">
			and (image_type = #{_parameter} or image_type = 1)
	    </if> 
		order by t.name
	</select>

    <select id="querySysDiskImageByMultiParams" resultMap="SysDiskImageVO">
        SELECT
        t.id,
        t.real_image_id,
        t.name,
        t.from_host_id,
        t.type,
        t.description,
        t.display_name,
        t.status,
        t.create_time,
        t.image_type
        FROM sys_disk_image t
        <where>
            1=1
            <if test="name!=null and name!=''">
                AND t.name LIKE #{name}
            </if>
            <if test="type!=null">
                AND  t.type = #{type}
            </if>
            <if test="status!=null">
                AND  t.status = #{status}
            </if>
            <if test="image_type!=null">
                AND  t.image_type = #{image_type}
            </if>
        </where>
        order by t.name
    </select>
	
	<select id="getSysDiskImageByName" resultMap="SysDiskImageVO">
		select
			t.id,
			t.real_image_id,
			t.name,
			t.from_host_id,
			t.type,
			t.description,
  			t.display_name,
 			t.status,
 			t.create_time
		from sys_disk_image t
		where t.name = #{name}
		limit 1
	</select>
	
	<select id="getById" resultMap="SysDiskImageVO">
		select
			t.id,
			t.real_image_id,
			t.name,
			t.from_host_id,
			t.type,
			t.description,
  			t.display_name,
 			t.status,
 			t.create_time
		from sys_disk_image t
		where t.id = #{id}
		limit 1
	</select>
	<select id="getByRealImageId" resultMap="SysDiskImageVO">
		select
			t.id,
			t.real_image_id,
			t.name,
			t.from_host_id,
			t.type,
			t.description,
  			t.display_name,
 			t.status,
 			t.create_time
		from sys_disk_image t
		where t.real_image_id = #{id}
		limit 1
	</select>
	
	 
	
	 

	<insert id="addSysDiskImage">
		insert into sys_disk_image
		      (  id,    real_image_id,  name,    from_host_id,      description,    user_id,      display_name,  type,create_time,image_type)
		values(#{id}, #{realImageId}, #{name}, #{fromHostId},  #{description},  #{userId},  #{displayName},  #{type},#{createTime},#{imageType})
	</insert>
	
	
	<!-- ******************* -->
	
	<update id="updateSysDiskImageById">
		update sys_disk_image set 
			name          = #{name},  
  			description   = #{description},
			display_name  = #{displayName}, 
			type          = #{type}
			<if test="modifiedTime!=null">
			,modified_time = #{modifiedTime}
			</if>
 		where id = #{id} 
	</update> 	 
	
	
	<update id="updateUnrelatedSysDiskImageByName">
		update sys_disk_image 
		<set>
			<if test="realImageId!=null">
				real_image_id = #{realImageId}
			</if> 
			 
		</set>
		where  name = #{name}
		and real_image_id is null
	</update> 
	
	<update id="updateImageTypeById">
		update sys_disk_image set
		image_type = #{imageType}
		where  id  = #{id}
	</update>
	
	
	<delete id="deleteSysDiskImageByIds">
		delete from sys_disk_image
		where id in 
		<foreach collection="array" item="item" open="(" close=")" separator=", ">
			#{item}
		</foreach>
	</delete>
	
	
</mapper>
